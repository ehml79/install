# -d或--debug 　详细显示指令执行过程，便于排错或了解程序执行的情况。
# -f或--force 　强行启动记录文件维护操作，纵使logrotate指令认为没有需要亦然。
# -s<状态文件>或--state=<状态文件> 　使用指定的状态文件。
# -v或--version 　显示指令执行过程。

# 排障过程中的最佳选择是使用‘-d’选项以预演方式运行logrotate。要进行验证，不用实际轮循任何日志文件，可以模拟演练日志轮循并显示其输出。

# logrotate -d /etc/logrotate.d/log-file 

# 即使轮循条件没有满足，我们也可以通过使用‘-f’选项来强制logrotate轮循日志文件，‘-v’参数提供了详细的输出。
# logrotate -vf /etc/logrotate.d/log-file 

/var/log/log-file {
    # monthly: 日志文件将按月轮循。其它可用值为‘daily’，‘weekly’或者‘yearly’。
    daily

    # rotate 5: 一次将存储5个归档日志。对于第六个归档，时间最久的归档将被删除。
    rotate 5

    # compress: 在轮循任务完成后，已轮循的归档将使用gzip进行压缩。
    compress

    # delaycompress: 总是与compress选项一起用，delaycompress选项指示logrotate不要将最近的归档压缩，压缩将在下一次轮循周期进行。这在你或任何软件仍然需要读取最新归档时很有用。
    delaycompress

    # missingok: 在日志轮循期间，任何错误将被忽略，例如“文件无法找到”之类的错误。
    missingok

    # notifempty: 如果日志文件为空，轮循不会进行。
    notifempty

    # create 644 root root: 以指定的权限创建全新的日志文件，同时logrotate也会重命名原始日志文件。
    create 644 root root

    # postrotate/endscript: 在所有其它指令完成后，postrotate和endscript里面指定的命令将被执行。在这种情况下，rsyslogd 进程将立即再次读取其配置并继续运行。
    postrotate
        /usr/bin/killall -HUP rsyslogd

    endscript
}
